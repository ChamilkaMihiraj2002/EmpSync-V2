// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id
  name String @unique
  role String 
  dob DateTime?
  telephone String?
  address String?
  email String @unique
  password String
  thumbId Bytes @unique
  createdAt DateTime @default(now())
}
model Ingredient {
  id String @id @unique
  name String 
  price_per_unit Decimal @db.Decimal(10, 2)
  quantity Decimal @db.Decimal(10, 2)
  priority Int
  createdAt DateTime @default(now())
}

model Payroll{
  id String @id @unique
  empId String 
  month String
  payrollPdf Bytes
  createdAt DateTime @default(now())

}

  model Meal {
  id String @id @unique
  name      String           
  description String?                        
  price       Float                          
  category    String                           
  imageUrl    String?                          
  createdAt   DateTime @default(now())                   
}


model Order {
  id Int @default(autoincrement()) @id
  orderNumber String @unique
  orderDate DateTime @default(now())
  price Float
  employeeId String
  serve Boolean @default(false)

}


model Attendance{
  id String @id
  empId String
  dateTime DateTime
  status String
}


model LeaveApplication{
  id Int @default(autoincrement()) @id
  appliedDate DateTime @default(now())
  duration Float
  empId String
  reason String
  status Boolean @default(false)
  reviewedBy String
}


model ScheduledMeal {
  id         Int      @id @default(autoincrement()) 
  date       DateTime @unique @db.Date  // Store as DATE (without time)
  breakfast  String[]
  lunch      String[]
  dinner     String[]
  createdAt  DateTime @default(now())
}



